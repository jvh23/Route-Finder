<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_01) on Wed Feb 08 15:37:44 PST 2012 -->
<title>DirectedGraph2</title>
<meta name="date" content="2012-02-08">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="DirectedGraph2";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../DirectedGraph/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/DirectedGraph2.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="../index.html?DirectedGraph/DirectedGraph2.html" target="_top">Frames</a></li>
<li><a href="DirectedGraph2.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">DirectedGraph</div>
<h2 title="Class DirectedGraph2" class="title">Class DirectedGraph2</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>DirectedGraph.DirectedGraph2</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">DirectedGraph2</span>
extends java.lang.Object</pre>
<div class="block">A DirectedGraph models relationships between objects.  
 <br>
 <br>
 A graph is composed of a set of nodes (N) and edges (E).
 <br>
 <br>
 Each edge e = (n1, n2) in E connects node n1 to node n2 
 <br>
 <br>
 The edges are directed (one-way). So e = (n1, n2) means that there is a path
 from Object n1 to n2, but not does not say whether there is a path from n2 to 
 n1.
 <br>
 <br></div>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>Janelle Van Hofwegen</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../DirectedGraph/DirectedGraph2.html#DirectedGraph2()">DirectedGraph2</a></strong>()</code>
<div class="block">Constructs an empty DirectedGraph</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../DirectedGraph/DirectedGraph2.html#DirectedGraph2(java.util.List)">DirectedGraph2</a></strong>(java.util.List&lt;java.lang.Object&gt;&nbsp;nodes)</code>
<div class="block">Constructs a DirectedGraph containing the nodes within list nodes</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../DirectedGraph/DirectedGraph2.html#addEdge(java.lang.Object, DirectedGraph.Edge2)">addEdge</a></strong>(java.lang.Object&nbsp;source,
       DirectedGraph.Edge2&nbsp;e)</code>
<div class="block">Adds the given Edge to the graph.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../DirectedGraph/DirectedGraph2.html#addEdge(java.lang.Object, java.lang.Object, java.lang.Object)">addEdge</a></strong>(java.lang.Object&nbsp;source,
       java.lang.Object&nbsp;target,
       java.lang.Object&nbsp;label)</code>
<div class="block">Creates a new edge based on given source node, target node, and 
 label, and adds this edge to the graph.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../DirectedGraph/DirectedGraph2.html#addNode(java.lang.Object)">addNode</a></strong>(java.lang.Object&nbsp;n)</code>
<div class="block">Adds the given node to the graph.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Set&lt;DirectedGraph.Edge2&gt;</code></td>
<td class="colLast"><code><strong><a href="../DirectedGraph/DirectedGraph2.html#edgesOf(java.lang.Object)">edgesOf</a></strong>(java.lang.Object&nbsp;n)</code>
<div class="block">Returns a set of all edges whose source is n.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.Set&lt;java.lang.Object&gt;</code></td>
<td class="colLast"><code><strong><a href="../DirectedGraph/DirectedGraph2.html#nodeSet()">nodeSet</a></strong>()</code>
<div class="block">Returns a set of all nodes contained in the graph.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>equals, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="DirectedGraph2()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DirectedGraph2</h4>
<pre>public&nbsp;DirectedGraph2()</pre>
<div class="block">Constructs an empty DirectedGraph</div>
<dl><DT><B>Modifies:</B><DD>this</DD></dl>
</li>
</ul>
<a name="DirectedGraph2(java.util.List)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>DirectedGraph2</h4>
<pre>public&nbsp;DirectedGraph2(java.util.List&lt;java.lang.Object&gt;&nbsp;nodes)</pre>
<div class="block">Constructs a DirectedGraph containing the nodes within list nodes</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>nodes</code> - - collection of nodes to be added to the graph</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if nodes ==null</dd><DT><B>Modifies:</B><DD>this</DD>
<DT><B>Requires:</B><DD>nodes != null</DD></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="nodeSet()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>nodeSet</h4>
<pre>public&nbsp;java.util.Set&lt;java.lang.Object&gt;&nbsp;nodeSet()</pre>
<div class="block">Returns a set of all nodes contained in the graph.</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>a set of all nodes in the graph.  Returns an empty set if no nodes
 are contained in graph.</dd></dl>
</li>
</ul>
<a name="addNode(java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addNode</h4>
<pre>public&nbsp;void&nbsp;addNode(java.lang.Object&nbsp;n)</pre>
<div class="block">Adds the given node to the graph.  Does nothing if node already exists in graph.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>n</code> - - node to be added to the graph</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if n == null</dd><DT><B>Modifies:</B><DD>this</DD>
<DT><B>Requires:</B><DD>n != null</DD></dl>
</li>
</ul>
<a name="addEdge(java.lang.Object, java.lang.Object, java.lang.Object)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addEdge</h4>
<pre>public&nbsp;void&nbsp;addEdge(java.lang.Object&nbsp;source,
           java.lang.Object&nbsp;target,
           java.lang.Object&nbsp;label)</pre>
<div class="block">Creates a new edge based on given source node, target node, and 
 label, and adds this edge to the graph.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>source</code> - - Source node (node edge is pointing from)</dd><dd><code>target</code> - - Target node (node edge is pointing at)</dd><dd><code>label</code> - - Label for newly created edge</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if any parameters are null</dd><DT><B>Modifies:</B><DD>this</DD></dl>
</li>
</ul>
<a name="addEdge(java.lang.Object, DirectedGraph.Edge2)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>addEdge</h4>
<pre>public&nbsp;void&nbsp;addEdge(java.lang.Object&nbsp;source,
           DirectedGraph.Edge2&nbsp;e)</pre>
<div class="block">Adds the given Edge to the graph. Given Edge must be legal to be added
 to the graph; illegal edges will not be added.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>source</code> - - Source node (node to which edge will be pointing from)</dd><dd><code>e</code> - - Edge to be added to given source node</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if one == null or e == null</dd><DT><B>Modifies:</B><DD>this</DD>
<DT><B>Requires:</B><DD>one != null, e !=null, edge is legal</DD></dl>
</li>
</ul>
<a name="edgesOf(java.lang.Object)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>edgesOf</h4>
<pre>public&nbsp;java.util.Set&lt;DirectedGraph.Edge2&gt;&nbsp;edgesOf(java.lang.Object&nbsp;n)</pre>
<div class="block">Returns a set of all edges whose source is n.  Therefore every Edge2 e in
 the set follows the form e = (n, some other Object)</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>n</code> - - the source Object for which a set of edges is being returned</dd>
<dt><span class="strong">Returns:</span></dt><dd>a Set of all edges whose source is n. Returned set is empty if the
 node has no edges.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - if n == null</dd>
<dd><code>java.lang.IllegalStateException</code> - if node n is not contained within the graph</dd>
<DT><B>Requires:</B><DD> <ul>
  <li> n != null
  <li> that n is contained within the method
 </ul>
</DD></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../DirectedGraph/package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/DirectedGraph2.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li>Next Class</li>
</ul>
<ul class="navList">
<li><a href="../index.html?DirectedGraph/DirectedGraph2.html" target="_top">Frames</a></li>
<li><a href="DirectedGraph2.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
